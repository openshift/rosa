// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/aws/aws-sdk-go/service/servicequotas/servicequotasiface (interfaces: ServiceQuotasAPI)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	request "github.com/aws/aws-sdk-go/aws/request"
	servicequotas "github.com/aws/aws-sdk-go/service/servicequotas"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceQuotasAPI is a mock of ServiceQuotasAPI interface.
type MockServiceQuotasAPI struct {
	ctrl     *gomock.Controller
	recorder *MockServiceQuotasAPIMockRecorder
}

// MockServiceQuotasAPIMockRecorder is the mock recorder for MockServiceQuotasAPI.
type MockServiceQuotasAPIMockRecorder struct {
	mock *MockServiceQuotasAPI
}

// NewMockServiceQuotasAPI creates a new mock instance.
func NewMockServiceQuotasAPI(ctrl *gomock.Controller) *MockServiceQuotasAPI {
	mock := &MockServiceQuotasAPI{ctrl: ctrl}
	mock.recorder = &MockServiceQuotasAPIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServiceQuotasAPI) EXPECT() *MockServiceQuotasAPIMockRecorder {
	return m.recorder
}

// AssociateServiceQuotaTemplate mocks base method.
func (m *MockServiceQuotasAPI) AssociateServiceQuotaTemplate(arg0 *servicequotas.AssociateServiceQuotaTemplateInput) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateServiceQuotaTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.AssociateServiceQuotaTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateServiceQuotaTemplate indicates an expected call of AssociateServiceQuotaTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) AssociateServiceQuotaTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateServiceQuotaTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).AssociateServiceQuotaTemplate), arg0)
}

// AssociateServiceQuotaTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) AssociateServiceQuotaTemplateRequest(arg0 *servicequotas.AssociateServiceQuotaTemplateInput) (*request.Request, *servicequotas.AssociateServiceQuotaTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AssociateServiceQuotaTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.AssociateServiceQuotaTemplateOutput)
	return ret0, ret1
}

// AssociateServiceQuotaTemplateRequest indicates an expected call of AssociateServiceQuotaTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) AssociateServiceQuotaTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateServiceQuotaTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).AssociateServiceQuotaTemplateRequest), arg0)
}

// AssociateServiceQuotaTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) AssociateServiceQuotaTemplateWithContext(arg0 context.Context, arg1 *servicequotas.AssociateServiceQuotaTemplateInput, arg2 ...request.Option) (*servicequotas.AssociateServiceQuotaTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "AssociateServiceQuotaTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.AssociateServiceQuotaTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AssociateServiceQuotaTemplateWithContext indicates an expected call of AssociateServiceQuotaTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) AssociateServiceQuotaTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AssociateServiceQuotaTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).AssociateServiceQuotaTemplateWithContext), varargs...)
}

// DeleteServiceQuotaIncreaseRequestFromTemplate mocks base method.
func (m *MockServiceQuotasAPI) DeleteServiceQuotaIncreaseRequestFromTemplate(arg0 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteServiceQuotaIncreaseRequestFromTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteServiceQuotaIncreaseRequestFromTemplate indicates an expected call of DeleteServiceQuotaIncreaseRequestFromTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) DeleteServiceQuotaIncreaseRequestFromTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteServiceQuotaIncreaseRequestFromTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).DeleteServiceQuotaIncreaseRequestFromTemplate), arg0)
}

// DeleteServiceQuotaIncreaseRequestFromTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) DeleteServiceQuotaIncreaseRequestFromTemplateRequest(arg0 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput) (*request.Request, *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteServiceQuotaIncreaseRequestFromTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput)
	return ret0, ret1
}

// DeleteServiceQuotaIncreaseRequestFromTemplateRequest indicates an expected call of DeleteServiceQuotaIncreaseRequestFromTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) DeleteServiceQuotaIncreaseRequestFromTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteServiceQuotaIncreaseRequestFromTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).DeleteServiceQuotaIncreaseRequestFromTemplateRequest), arg0)
}

// DeleteServiceQuotaIncreaseRequestFromTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) DeleteServiceQuotaIncreaseRequestFromTemplateWithContext(arg0 context.Context, arg1 *servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateInput, arg2 ...request.Option) (*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DeleteServiceQuotaIncreaseRequestFromTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.DeleteServiceQuotaIncreaseRequestFromTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteServiceQuotaIncreaseRequestFromTemplateWithContext indicates an expected call of DeleteServiceQuotaIncreaseRequestFromTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) DeleteServiceQuotaIncreaseRequestFromTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteServiceQuotaIncreaseRequestFromTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).DeleteServiceQuotaIncreaseRequestFromTemplateWithContext), varargs...)
}

// DisassociateServiceQuotaTemplate mocks base method.
func (m *MockServiceQuotasAPI) DisassociateServiceQuotaTemplate(arg0 *servicequotas.DisassociateServiceQuotaTemplateInput) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateServiceQuotaTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.DisassociateServiceQuotaTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateServiceQuotaTemplate indicates an expected call of DisassociateServiceQuotaTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) DisassociateServiceQuotaTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateServiceQuotaTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).DisassociateServiceQuotaTemplate), arg0)
}

// DisassociateServiceQuotaTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) DisassociateServiceQuotaTemplateRequest(arg0 *servicequotas.DisassociateServiceQuotaTemplateInput) (*request.Request, *servicequotas.DisassociateServiceQuotaTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DisassociateServiceQuotaTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.DisassociateServiceQuotaTemplateOutput)
	return ret0, ret1
}

// DisassociateServiceQuotaTemplateRequest indicates an expected call of DisassociateServiceQuotaTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) DisassociateServiceQuotaTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateServiceQuotaTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).DisassociateServiceQuotaTemplateRequest), arg0)
}

// DisassociateServiceQuotaTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) DisassociateServiceQuotaTemplateWithContext(arg0 context.Context, arg1 *servicequotas.DisassociateServiceQuotaTemplateInput, arg2 ...request.Option) (*servicequotas.DisassociateServiceQuotaTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "DisassociateServiceQuotaTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.DisassociateServiceQuotaTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DisassociateServiceQuotaTemplateWithContext indicates an expected call of DisassociateServiceQuotaTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) DisassociateServiceQuotaTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DisassociateServiceQuotaTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).DisassociateServiceQuotaTemplateWithContext), varargs...)
}

// GetAWSDefaultServiceQuota mocks base method.
func (m *MockServiceQuotasAPI) GetAWSDefaultServiceQuota(arg0 *servicequotas.GetAWSDefaultServiceQuotaInput) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAWSDefaultServiceQuota", arg0)
	ret0, _ := ret[0].(*servicequotas.GetAWSDefaultServiceQuotaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAWSDefaultServiceQuota indicates an expected call of GetAWSDefaultServiceQuota.
func (mr *MockServiceQuotasAPIMockRecorder) GetAWSDefaultServiceQuota(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAWSDefaultServiceQuota", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetAWSDefaultServiceQuota), arg0)
}

// GetAWSDefaultServiceQuotaRequest mocks base method.
func (m *MockServiceQuotasAPI) GetAWSDefaultServiceQuotaRequest(arg0 *servicequotas.GetAWSDefaultServiceQuotaInput) (*request.Request, *servicequotas.GetAWSDefaultServiceQuotaOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAWSDefaultServiceQuotaRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.GetAWSDefaultServiceQuotaOutput)
	return ret0, ret1
}

// GetAWSDefaultServiceQuotaRequest indicates an expected call of GetAWSDefaultServiceQuotaRequest.
func (mr *MockServiceQuotasAPIMockRecorder) GetAWSDefaultServiceQuotaRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAWSDefaultServiceQuotaRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetAWSDefaultServiceQuotaRequest), arg0)
}

// GetAWSDefaultServiceQuotaWithContext mocks base method.
func (m *MockServiceQuotasAPI) GetAWSDefaultServiceQuotaWithContext(arg0 context.Context, arg1 *servicequotas.GetAWSDefaultServiceQuotaInput, arg2 ...request.Option) (*servicequotas.GetAWSDefaultServiceQuotaOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAWSDefaultServiceQuotaWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.GetAWSDefaultServiceQuotaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAWSDefaultServiceQuotaWithContext indicates an expected call of GetAWSDefaultServiceQuotaWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) GetAWSDefaultServiceQuotaWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAWSDefaultServiceQuotaWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetAWSDefaultServiceQuotaWithContext), varargs...)
}

// GetAssociationForServiceQuotaTemplate mocks base method.
func (m *MockServiceQuotasAPI) GetAssociationForServiceQuotaTemplate(arg0 *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAssociationForServiceQuotaTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.GetAssociationForServiceQuotaTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssociationForServiceQuotaTemplate indicates an expected call of GetAssociationForServiceQuotaTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) GetAssociationForServiceQuotaTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAssociationForServiceQuotaTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetAssociationForServiceQuotaTemplate), arg0)
}

// GetAssociationForServiceQuotaTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) GetAssociationForServiceQuotaTemplateRequest(arg0 *servicequotas.GetAssociationForServiceQuotaTemplateInput) (*request.Request, *servicequotas.GetAssociationForServiceQuotaTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAssociationForServiceQuotaTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.GetAssociationForServiceQuotaTemplateOutput)
	return ret0, ret1
}

// GetAssociationForServiceQuotaTemplateRequest indicates an expected call of GetAssociationForServiceQuotaTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) GetAssociationForServiceQuotaTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAssociationForServiceQuotaTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetAssociationForServiceQuotaTemplateRequest), arg0)
}

// GetAssociationForServiceQuotaTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) GetAssociationForServiceQuotaTemplateWithContext(arg0 context.Context, arg1 *servicequotas.GetAssociationForServiceQuotaTemplateInput, arg2 ...request.Option) (*servicequotas.GetAssociationForServiceQuotaTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetAssociationForServiceQuotaTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.GetAssociationForServiceQuotaTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAssociationForServiceQuotaTemplateWithContext indicates an expected call of GetAssociationForServiceQuotaTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) GetAssociationForServiceQuotaTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAssociationForServiceQuotaTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetAssociationForServiceQuotaTemplateWithContext), varargs...)
}

// GetRequestedServiceQuotaChange mocks base method.
func (m *MockServiceQuotasAPI) GetRequestedServiceQuotaChange(arg0 *servicequotas.GetRequestedServiceQuotaChangeInput) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequestedServiceQuotaChange", arg0)
	ret0, _ := ret[0].(*servicequotas.GetRequestedServiceQuotaChangeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRequestedServiceQuotaChange indicates an expected call of GetRequestedServiceQuotaChange.
func (mr *MockServiceQuotasAPIMockRecorder) GetRequestedServiceQuotaChange(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequestedServiceQuotaChange", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetRequestedServiceQuotaChange), arg0)
}

// GetRequestedServiceQuotaChangeRequest mocks base method.
func (m *MockServiceQuotasAPI) GetRequestedServiceQuotaChangeRequest(arg0 *servicequotas.GetRequestedServiceQuotaChangeInput) (*request.Request, *servicequotas.GetRequestedServiceQuotaChangeOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRequestedServiceQuotaChangeRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.GetRequestedServiceQuotaChangeOutput)
	return ret0, ret1
}

// GetRequestedServiceQuotaChangeRequest indicates an expected call of GetRequestedServiceQuotaChangeRequest.
func (mr *MockServiceQuotasAPIMockRecorder) GetRequestedServiceQuotaChangeRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequestedServiceQuotaChangeRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetRequestedServiceQuotaChangeRequest), arg0)
}

// GetRequestedServiceQuotaChangeWithContext mocks base method.
func (m *MockServiceQuotasAPI) GetRequestedServiceQuotaChangeWithContext(arg0 context.Context, arg1 *servicequotas.GetRequestedServiceQuotaChangeInput, arg2 ...request.Option) (*servicequotas.GetRequestedServiceQuotaChangeOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetRequestedServiceQuotaChangeWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.GetRequestedServiceQuotaChangeOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRequestedServiceQuotaChangeWithContext indicates an expected call of GetRequestedServiceQuotaChangeWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) GetRequestedServiceQuotaChangeWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequestedServiceQuotaChangeWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetRequestedServiceQuotaChangeWithContext), varargs...)
}

// GetServiceQuota mocks base method.
func (m *MockServiceQuotasAPI) GetServiceQuota(arg0 *servicequotas.GetServiceQuotaInput) (*servicequotas.GetServiceQuotaOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceQuota", arg0)
	ret0, _ := ret[0].(*servicequotas.GetServiceQuotaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceQuota indicates an expected call of GetServiceQuota.
func (mr *MockServiceQuotasAPIMockRecorder) GetServiceQuota(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceQuota", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetServiceQuota), arg0)
}

// GetServiceQuotaIncreaseRequestFromTemplate mocks base method.
func (m *MockServiceQuotasAPI) GetServiceQuotaIncreaseRequestFromTemplate(arg0 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceQuotaIncreaseRequestFromTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceQuotaIncreaseRequestFromTemplate indicates an expected call of GetServiceQuotaIncreaseRequestFromTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) GetServiceQuotaIncreaseRequestFromTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceQuotaIncreaseRequestFromTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetServiceQuotaIncreaseRequestFromTemplate), arg0)
}

// GetServiceQuotaIncreaseRequestFromTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) GetServiceQuotaIncreaseRequestFromTemplateRequest(arg0 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput) (*request.Request, *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceQuotaIncreaseRequestFromTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput)
	return ret0, ret1
}

// GetServiceQuotaIncreaseRequestFromTemplateRequest indicates an expected call of GetServiceQuotaIncreaseRequestFromTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) GetServiceQuotaIncreaseRequestFromTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceQuotaIncreaseRequestFromTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetServiceQuotaIncreaseRequestFromTemplateRequest), arg0)
}

// GetServiceQuotaIncreaseRequestFromTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) GetServiceQuotaIncreaseRequestFromTemplateWithContext(arg0 context.Context, arg1 *servicequotas.GetServiceQuotaIncreaseRequestFromTemplateInput, arg2 ...request.Option) (*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetServiceQuotaIncreaseRequestFromTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.GetServiceQuotaIncreaseRequestFromTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceQuotaIncreaseRequestFromTemplateWithContext indicates an expected call of GetServiceQuotaIncreaseRequestFromTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) GetServiceQuotaIncreaseRequestFromTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceQuotaIncreaseRequestFromTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetServiceQuotaIncreaseRequestFromTemplateWithContext), varargs...)
}

// GetServiceQuotaRequest mocks base method.
func (m *MockServiceQuotasAPI) GetServiceQuotaRequest(arg0 *servicequotas.GetServiceQuotaInput) (*request.Request, *servicequotas.GetServiceQuotaOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetServiceQuotaRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.GetServiceQuotaOutput)
	return ret0, ret1
}

// GetServiceQuotaRequest indicates an expected call of GetServiceQuotaRequest.
func (mr *MockServiceQuotasAPIMockRecorder) GetServiceQuotaRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceQuotaRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetServiceQuotaRequest), arg0)
}

// GetServiceQuotaWithContext mocks base method.
func (m *MockServiceQuotasAPI) GetServiceQuotaWithContext(arg0 context.Context, arg1 *servicequotas.GetServiceQuotaInput, arg2 ...request.Option) (*servicequotas.GetServiceQuotaOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetServiceQuotaWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.GetServiceQuotaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetServiceQuotaWithContext indicates an expected call of GetServiceQuotaWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) GetServiceQuotaWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetServiceQuotaWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).GetServiceQuotaWithContext), varargs...)
}

// ListAWSDefaultServiceQuotas mocks base method.
func (m *MockServiceQuotasAPI) ListAWSDefaultServiceQuotas(arg0 *servicequotas.ListAWSDefaultServiceQuotasInput) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAWSDefaultServiceQuotas", arg0)
	ret0, _ := ret[0].(*servicequotas.ListAWSDefaultServiceQuotasOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAWSDefaultServiceQuotas indicates an expected call of ListAWSDefaultServiceQuotas.
func (mr *MockServiceQuotasAPIMockRecorder) ListAWSDefaultServiceQuotas(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAWSDefaultServiceQuotas", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListAWSDefaultServiceQuotas), arg0)
}

// ListAWSDefaultServiceQuotasPages mocks base method.
func (m *MockServiceQuotasAPI) ListAWSDefaultServiceQuotasPages(arg0 *servicequotas.ListAWSDefaultServiceQuotasInput, arg1 func(*servicequotas.ListAWSDefaultServiceQuotasOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAWSDefaultServiceQuotasPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAWSDefaultServiceQuotasPages indicates an expected call of ListAWSDefaultServiceQuotasPages.
func (mr *MockServiceQuotasAPIMockRecorder) ListAWSDefaultServiceQuotasPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAWSDefaultServiceQuotasPages", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListAWSDefaultServiceQuotasPages), arg0, arg1)
}

// ListAWSDefaultServiceQuotasPagesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListAWSDefaultServiceQuotasPagesWithContext(arg0 context.Context, arg1 *servicequotas.ListAWSDefaultServiceQuotasInput, arg2 func(*servicequotas.ListAWSDefaultServiceQuotasOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAWSDefaultServiceQuotasPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListAWSDefaultServiceQuotasPagesWithContext indicates an expected call of ListAWSDefaultServiceQuotasPagesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListAWSDefaultServiceQuotasPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAWSDefaultServiceQuotasPagesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListAWSDefaultServiceQuotasPagesWithContext), varargs...)
}

// ListAWSDefaultServiceQuotasRequest mocks base method.
func (m *MockServiceQuotasAPI) ListAWSDefaultServiceQuotasRequest(arg0 *servicequotas.ListAWSDefaultServiceQuotasInput) (*request.Request, *servicequotas.ListAWSDefaultServiceQuotasOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAWSDefaultServiceQuotasRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListAWSDefaultServiceQuotasOutput)
	return ret0, ret1
}

// ListAWSDefaultServiceQuotasRequest indicates an expected call of ListAWSDefaultServiceQuotasRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListAWSDefaultServiceQuotasRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAWSDefaultServiceQuotasRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListAWSDefaultServiceQuotasRequest), arg0)
}

// ListAWSDefaultServiceQuotasWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListAWSDefaultServiceQuotasWithContext(arg0 context.Context, arg1 *servicequotas.ListAWSDefaultServiceQuotasInput, arg2 ...request.Option) (*servicequotas.ListAWSDefaultServiceQuotasOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListAWSDefaultServiceQuotasWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListAWSDefaultServiceQuotasOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAWSDefaultServiceQuotasWithContext indicates an expected call of ListAWSDefaultServiceQuotasWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListAWSDefaultServiceQuotasWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAWSDefaultServiceQuotasWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListAWSDefaultServiceQuotasWithContext), varargs...)
}

// ListRequestedServiceQuotaChangeHistory mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistory(arg0 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistory", arg0)
	ret0, _ := ret[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRequestedServiceQuotaChangeHistory indicates an expected call of ListRequestedServiceQuotaChangeHistory.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistory(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistory", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistory), arg0)
}

// ListRequestedServiceQuotaChangeHistoryByQuota mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryByQuota(arg0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryByQuota", arg0)
	ret0, _ := ret[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRequestedServiceQuotaChangeHistoryByQuota indicates an expected call of ListRequestedServiceQuotaChangeHistoryByQuota.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryByQuota(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryByQuota", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryByQuota), arg0)
}

// ListRequestedServiceQuotaChangeHistoryByQuotaPages mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryByQuotaPages(arg0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, arg1 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryByQuotaPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListRequestedServiceQuotaChangeHistoryByQuotaPages indicates an expected call of ListRequestedServiceQuotaChangeHistoryByQuotaPages.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryByQuotaPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryByQuotaPages", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryByQuotaPages), arg0, arg1)
}

// ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext(arg0 context.Context, arg1 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, arg2 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext indicates an expected call of ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryByQuotaPagesWithContext), varargs...)
}

// ListRequestedServiceQuotaChangeHistoryByQuotaRequest mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryByQuotaRequest(arg0 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput) (*request.Request, *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryByQuotaRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput)
	return ret0, ret1
}

// ListRequestedServiceQuotaChangeHistoryByQuotaRequest indicates an expected call of ListRequestedServiceQuotaChangeHistoryByQuotaRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryByQuotaRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryByQuotaRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryByQuotaRequest), arg0)
}

// ListRequestedServiceQuotaChangeHistoryByQuotaWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryByQuotaWithContext(arg0 context.Context, arg1 *servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaInput, arg2 ...request.Option) (*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryByQuotaWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryByQuotaOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRequestedServiceQuotaChangeHistoryByQuotaWithContext indicates an expected call of ListRequestedServiceQuotaChangeHistoryByQuotaWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryByQuotaWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryByQuotaWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryByQuotaWithContext), varargs...)
}

// ListRequestedServiceQuotaChangeHistoryPages mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryPages(arg0 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, arg1 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListRequestedServiceQuotaChangeHistoryPages indicates an expected call of ListRequestedServiceQuotaChangeHistoryPages.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryPages", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryPages), arg0, arg1)
}

// ListRequestedServiceQuotaChangeHistoryPagesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryPagesWithContext(arg0 context.Context, arg1 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, arg2 func(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListRequestedServiceQuotaChangeHistoryPagesWithContext indicates an expected call of ListRequestedServiceQuotaChangeHistoryPagesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryPagesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryPagesWithContext), varargs...)
}

// ListRequestedServiceQuotaChangeHistoryRequest mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryRequest(arg0 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput) (*request.Request, *servicequotas.ListRequestedServiceQuotaChangeHistoryOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput)
	return ret0, ret1
}

// ListRequestedServiceQuotaChangeHistoryRequest indicates an expected call of ListRequestedServiceQuotaChangeHistoryRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryRequest), arg0)
}

// ListRequestedServiceQuotaChangeHistoryWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListRequestedServiceQuotaChangeHistoryWithContext(arg0 context.Context, arg1 *servicequotas.ListRequestedServiceQuotaChangeHistoryInput, arg2 ...request.Option) (*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListRequestedServiceQuotaChangeHistoryWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListRequestedServiceQuotaChangeHistoryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRequestedServiceQuotaChangeHistoryWithContext indicates an expected call of ListRequestedServiceQuotaChangeHistoryWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListRequestedServiceQuotaChangeHistoryWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequestedServiceQuotaChangeHistoryWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListRequestedServiceQuotaChangeHistoryWithContext), varargs...)
}

// ListServiceQuotaIncreaseRequestsInTemplate mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotaIncreaseRequestsInTemplate(arg0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceQuotaIncreaseRequestsInTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceQuotaIncreaseRequestsInTemplate indicates an expected call of ListServiceQuotaIncreaseRequestsInTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotaIncreaseRequestsInTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotaIncreaseRequestsInTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotaIncreaseRequestsInTemplate), arg0)
}

// ListServiceQuotaIncreaseRequestsInTemplatePages mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotaIncreaseRequestsInTemplatePages(arg0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, arg1 func(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceQuotaIncreaseRequestsInTemplatePages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListServiceQuotaIncreaseRequestsInTemplatePages indicates an expected call of ListServiceQuotaIncreaseRequestsInTemplatePages.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotaIncreaseRequestsInTemplatePages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotaIncreaseRequestsInTemplatePages", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotaIncreaseRequestsInTemplatePages), arg0, arg1)
}

// ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext(arg0 context.Context, arg1 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, arg2 func(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext indicates an expected call of ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotaIncreaseRequestsInTemplatePagesWithContext), varargs...)
}

// ListServiceQuotaIncreaseRequestsInTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotaIncreaseRequestsInTemplateRequest(arg0 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput) (*request.Request, *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceQuotaIncreaseRequestsInTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput)
	return ret0, ret1
}

// ListServiceQuotaIncreaseRequestsInTemplateRequest indicates an expected call of ListServiceQuotaIncreaseRequestsInTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotaIncreaseRequestsInTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotaIncreaseRequestsInTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotaIncreaseRequestsInTemplateRequest), arg0)
}

// ListServiceQuotaIncreaseRequestsInTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotaIncreaseRequestsInTemplateWithContext(arg0 context.Context, arg1 *servicequotas.ListServiceQuotaIncreaseRequestsInTemplateInput, arg2 ...request.Option) (*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServiceQuotaIncreaseRequestsInTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListServiceQuotaIncreaseRequestsInTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceQuotaIncreaseRequestsInTemplateWithContext indicates an expected call of ListServiceQuotaIncreaseRequestsInTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotaIncreaseRequestsInTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotaIncreaseRequestsInTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotaIncreaseRequestsInTemplateWithContext), varargs...)
}

// ListServiceQuotas mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotas(arg0 *servicequotas.ListServiceQuotasInput) (*servicequotas.ListServiceQuotasOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceQuotas", arg0)
	ret0, _ := ret[0].(*servicequotas.ListServiceQuotasOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceQuotas indicates an expected call of ListServiceQuotas.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotas(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotas", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotas), arg0)
}

// ListServiceQuotasPages mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotasPages(arg0 *servicequotas.ListServiceQuotasInput, arg1 func(*servicequotas.ListServiceQuotasOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceQuotasPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListServiceQuotasPages indicates an expected call of ListServiceQuotasPages.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotasPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotasPages", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotasPages), arg0, arg1)
}

// ListServiceQuotasPagesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotasPagesWithContext(arg0 context.Context, arg1 *servicequotas.ListServiceQuotasInput, arg2 func(*servicequotas.ListServiceQuotasOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServiceQuotasPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListServiceQuotasPagesWithContext indicates an expected call of ListServiceQuotasPagesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotasPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotasPagesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotasPagesWithContext), varargs...)
}

// ListServiceQuotasRequest mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotasRequest(arg0 *servicequotas.ListServiceQuotasInput) (*request.Request, *servicequotas.ListServiceQuotasOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServiceQuotasRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListServiceQuotasOutput)
	return ret0, ret1
}

// ListServiceQuotasRequest indicates an expected call of ListServiceQuotasRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotasRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotasRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotasRequest), arg0)
}

// ListServiceQuotasWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListServiceQuotasWithContext(arg0 context.Context, arg1 *servicequotas.ListServiceQuotasInput, arg2 ...request.Option) (*servicequotas.ListServiceQuotasOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServiceQuotasWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListServiceQuotasOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServiceQuotasWithContext indicates an expected call of ListServiceQuotasWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListServiceQuotasWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServiceQuotasWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServiceQuotasWithContext), varargs...)
}

// ListServices mocks base method.
func (m *MockServiceQuotasAPI) ListServices(arg0 *servicequotas.ListServicesInput) (*servicequotas.ListServicesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServices", arg0)
	ret0, _ := ret[0].(*servicequotas.ListServicesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServices indicates an expected call of ListServices.
func (mr *MockServiceQuotasAPIMockRecorder) ListServices(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServices", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServices), arg0)
}

// ListServicesPages mocks base method.
func (m *MockServiceQuotasAPI) ListServicesPages(arg0 *servicequotas.ListServicesInput, arg1 func(*servicequotas.ListServicesOutput, bool) bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServicesPages", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListServicesPages indicates an expected call of ListServicesPages.
func (mr *MockServiceQuotasAPIMockRecorder) ListServicesPages(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServicesPages", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServicesPages), arg0, arg1)
}

// ListServicesPagesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListServicesPagesWithContext(arg0 context.Context, arg1 *servicequotas.ListServicesInput, arg2 func(*servicequotas.ListServicesOutput, bool) bool, arg3 ...request.Option) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1, arg2}
	for _, a := range arg3 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServicesPagesWithContext", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// ListServicesPagesWithContext indicates an expected call of ListServicesPagesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListServicesPagesWithContext(arg0, arg1, arg2 interface{}, arg3 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1, arg2}, arg3...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServicesPagesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServicesPagesWithContext), varargs...)
}

// ListServicesRequest mocks base method.
func (m *MockServiceQuotasAPI) ListServicesRequest(arg0 *servicequotas.ListServicesInput) (*request.Request, *servicequotas.ListServicesOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListServicesRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListServicesOutput)
	return ret0, ret1
}

// ListServicesRequest indicates an expected call of ListServicesRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListServicesRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServicesRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServicesRequest), arg0)
}

// ListServicesWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListServicesWithContext(arg0 context.Context, arg1 *servicequotas.ListServicesInput, arg2 ...request.Option) (*servicequotas.ListServicesOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListServicesWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListServicesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListServicesWithContext indicates an expected call of ListServicesWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListServicesWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListServicesWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListServicesWithContext), varargs...)
}

// ListTagsForResource mocks base method.
func (m *MockServiceQuotasAPI) ListTagsForResource(arg0 *servicequotas.ListTagsForResourceInput) (*servicequotas.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResource", arg0)
	ret0, _ := ret[0].(*servicequotas.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResource indicates an expected call of ListTagsForResource.
func (mr *MockServiceQuotasAPIMockRecorder) ListTagsForResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResource", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListTagsForResource), arg0)
}

// ListTagsForResourceRequest mocks base method.
func (m *MockServiceQuotasAPI) ListTagsForResourceRequest(arg0 *servicequotas.ListTagsForResourceInput) (*request.Request, *servicequotas.ListTagsForResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTagsForResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.ListTagsForResourceOutput)
	return ret0, ret1
}

// ListTagsForResourceRequest indicates an expected call of ListTagsForResourceRequest.
func (mr *MockServiceQuotasAPIMockRecorder) ListTagsForResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListTagsForResourceRequest), arg0)
}

// ListTagsForResourceWithContext mocks base method.
func (m *MockServiceQuotasAPI) ListTagsForResourceWithContext(arg0 context.Context, arg1 *servicequotas.ListTagsForResourceInput, arg2 ...request.Option) (*servicequotas.ListTagsForResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListTagsForResourceWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.ListTagsForResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTagsForResourceWithContext indicates an expected call of ListTagsForResourceWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) ListTagsForResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTagsForResourceWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).ListTagsForResourceWithContext), varargs...)
}

// PutServiceQuotaIncreaseRequestIntoTemplate mocks base method.
func (m *MockServiceQuotasAPI) PutServiceQuotaIncreaseRequestIntoTemplate(arg0 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutServiceQuotaIncreaseRequestIntoTemplate", arg0)
	ret0, _ := ret[0].(*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutServiceQuotaIncreaseRequestIntoTemplate indicates an expected call of PutServiceQuotaIncreaseRequestIntoTemplate.
func (mr *MockServiceQuotasAPIMockRecorder) PutServiceQuotaIncreaseRequestIntoTemplate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutServiceQuotaIncreaseRequestIntoTemplate", reflect.TypeOf((*MockServiceQuotasAPI)(nil).PutServiceQuotaIncreaseRequestIntoTemplate), arg0)
}

// PutServiceQuotaIncreaseRequestIntoTemplateRequest mocks base method.
func (m *MockServiceQuotasAPI) PutServiceQuotaIncreaseRequestIntoTemplateRequest(arg0 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput) (*request.Request, *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutServiceQuotaIncreaseRequestIntoTemplateRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput)
	return ret0, ret1
}

// PutServiceQuotaIncreaseRequestIntoTemplateRequest indicates an expected call of PutServiceQuotaIncreaseRequestIntoTemplateRequest.
func (mr *MockServiceQuotasAPIMockRecorder) PutServiceQuotaIncreaseRequestIntoTemplateRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutServiceQuotaIncreaseRequestIntoTemplateRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).PutServiceQuotaIncreaseRequestIntoTemplateRequest), arg0)
}

// PutServiceQuotaIncreaseRequestIntoTemplateWithContext mocks base method.
func (m *MockServiceQuotasAPI) PutServiceQuotaIncreaseRequestIntoTemplateWithContext(arg0 context.Context, arg1 *servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateInput, arg2 ...request.Option) (*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "PutServiceQuotaIncreaseRequestIntoTemplateWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.PutServiceQuotaIncreaseRequestIntoTemplateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutServiceQuotaIncreaseRequestIntoTemplateWithContext indicates an expected call of PutServiceQuotaIncreaseRequestIntoTemplateWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) PutServiceQuotaIncreaseRequestIntoTemplateWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutServiceQuotaIncreaseRequestIntoTemplateWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).PutServiceQuotaIncreaseRequestIntoTemplateWithContext), varargs...)
}

// RequestServiceQuotaIncrease mocks base method.
func (m *MockServiceQuotasAPI) RequestServiceQuotaIncrease(arg0 *servicequotas.RequestServiceQuotaIncreaseInput) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestServiceQuotaIncrease", arg0)
	ret0, _ := ret[0].(*servicequotas.RequestServiceQuotaIncreaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestServiceQuotaIncrease indicates an expected call of RequestServiceQuotaIncrease.
func (mr *MockServiceQuotasAPIMockRecorder) RequestServiceQuotaIncrease(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestServiceQuotaIncrease", reflect.TypeOf((*MockServiceQuotasAPI)(nil).RequestServiceQuotaIncrease), arg0)
}

// RequestServiceQuotaIncreaseRequest mocks base method.
func (m *MockServiceQuotasAPI) RequestServiceQuotaIncreaseRequest(arg0 *servicequotas.RequestServiceQuotaIncreaseInput) (*request.Request, *servicequotas.RequestServiceQuotaIncreaseOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RequestServiceQuotaIncreaseRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.RequestServiceQuotaIncreaseOutput)
	return ret0, ret1
}

// RequestServiceQuotaIncreaseRequest indicates an expected call of RequestServiceQuotaIncreaseRequest.
func (mr *MockServiceQuotasAPIMockRecorder) RequestServiceQuotaIncreaseRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestServiceQuotaIncreaseRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).RequestServiceQuotaIncreaseRequest), arg0)
}

// RequestServiceQuotaIncreaseWithContext mocks base method.
func (m *MockServiceQuotasAPI) RequestServiceQuotaIncreaseWithContext(arg0 context.Context, arg1 *servicequotas.RequestServiceQuotaIncreaseInput, arg2 ...request.Option) (*servicequotas.RequestServiceQuotaIncreaseOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "RequestServiceQuotaIncreaseWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.RequestServiceQuotaIncreaseOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RequestServiceQuotaIncreaseWithContext indicates an expected call of RequestServiceQuotaIncreaseWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) RequestServiceQuotaIncreaseWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RequestServiceQuotaIncreaseWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).RequestServiceQuotaIncreaseWithContext), varargs...)
}

// TagResource mocks base method.
func (m *MockServiceQuotasAPI) TagResource(arg0 *servicequotas.TagResourceInput) (*servicequotas.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResource", arg0)
	ret0, _ := ret[0].(*servicequotas.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResource indicates an expected call of TagResource.
func (mr *MockServiceQuotasAPIMockRecorder) TagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResource", reflect.TypeOf((*MockServiceQuotasAPI)(nil).TagResource), arg0)
}

// TagResourceRequest mocks base method.
func (m *MockServiceQuotasAPI) TagResourceRequest(arg0 *servicequotas.TagResourceInput) (*request.Request, *servicequotas.TagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.TagResourceOutput)
	return ret0, ret1
}

// TagResourceRequest indicates an expected call of TagResourceRequest.
func (mr *MockServiceQuotasAPIMockRecorder) TagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).TagResourceRequest), arg0)
}

// TagResourceWithContext mocks base method.
func (m *MockServiceQuotasAPI) TagResourceWithContext(arg0 context.Context, arg1 *servicequotas.TagResourceInput, arg2 ...request.Option) (*servicequotas.TagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.TagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TagResourceWithContext indicates an expected call of TagResourceWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) TagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TagResourceWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).TagResourceWithContext), varargs...)
}

// UntagResource mocks base method.
func (m *MockServiceQuotasAPI) UntagResource(arg0 *servicequotas.UntagResourceInput) (*servicequotas.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResource", arg0)
	ret0, _ := ret[0].(*servicequotas.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResource indicates an expected call of UntagResource.
func (mr *MockServiceQuotasAPIMockRecorder) UntagResource(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResource", reflect.TypeOf((*MockServiceQuotasAPI)(nil).UntagResource), arg0)
}

// UntagResourceRequest mocks base method.
func (m *MockServiceQuotasAPI) UntagResourceRequest(arg0 *servicequotas.UntagResourceInput) (*request.Request, *servicequotas.UntagResourceOutput) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UntagResourceRequest", arg0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*servicequotas.UntagResourceOutput)
	return ret0, ret1
}

// UntagResourceRequest indicates an expected call of UntagResourceRequest.
func (mr *MockServiceQuotasAPIMockRecorder) UntagResourceRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceRequest", reflect.TypeOf((*MockServiceQuotasAPI)(nil).UntagResourceRequest), arg0)
}

// UntagResourceWithContext mocks base method.
func (m *MockServiceQuotasAPI) UntagResourceWithContext(arg0 context.Context, arg1 *servicequotas.UntagResourceInput, arg2 ...request.Option) (*servicequotas.UntagResourceOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "UntagResourceWithContext", varargs...)
	ret0, _ := ret[0].(*servicequotas.UntagResourceOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UntagResourceWithContext indicates an expected call of UntagResourceWithContext.
func (mr *MockServiceQuotasAPIMockRecorder) UntagResourceWithContext(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UntagResourceWithContext", reflect.TypeOf((*MockServiceQuotasAPI)(nil).UntagResourceWithContext), varargs...)
}
